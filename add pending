<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gopal Kumar - AI & Data Science Portfolio</title>

    <meta name="description" content="Gopal Kumar | AI & Data Science | React Developer | Portfolio showcasing full-stack projects, dashboards, and ML models.">
    <meta property="og:title" content="Gopal Kumar - AI & Data Science Portfolio">
    <meta property="og:description" content="Gopal Kumar | AI & Data Science | React Developer | Portfolio showcasing full-stack projects, dashboards, and ML models.">
    <meta property="og:image" content="https://placehold.co/1200x630/111827/FBBF24?text=Gopal+Kumar+Portfolio">
    <meta name="robots" content="index, follow">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Inter:wght@400;500;700&display=swap" rel="stylesheet">

    <style>
        /* Base Body Styles */
        body {
            background-color: #111827; /* Dark background */
            color: #E5E7EB; /* Light text color */
            font-family: 'Inter', sans-serif;
            overflow-x: hidden; /* Prevent horizontal scroll due to animations */
        }
        /* Custom Font for Headings */
        .font-orbitron {
            font-family: 'Orbitron', sans-serif;
        }

        /* Navigation Link Underline Effect */
        .nav-link {
            position: relative;
            transition: color 0.3s;
        }
        .nav-link::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: -4px;
            left: 50%;
            transform: translateX(-50%);
            background-color: #FBBF24; /* Amber underline */
            transition: width 0.3s;
        }
        .nav-link:hover::after, .nav-link.active::after {
            width: 100%;
        }
        .nav-link.active {
            color: #FBBF24; /* Active link color */
        }

        /* Skill Tag Hover Effect */
        .skill-tag {
            transition: all 0.2s ease-in-out;
        }
        .skill-tag:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(251, 191, 36, 0.2); /* Subtle glow */
        }

        /* Project Card Hover Effect */
        .project-card {
            transition: transform 0.3s, box-shadow 0.3s;
            overflow: hidden;
        }
        .project-card:hover {
            transform: translateY(-5px); /* Lift up */
            box-shadow: 0 10px 20px rgba(0,0,0,0.4); /* Deeper shadow */
        }
        /* Project Card Overlay on Hover */
        .project-card .project-overlay {
            opacity: 0;
            transition: opacity 0.3s;
        }
        .project-card:hover .project-overlay {
            opacity: 1;
        }

        /* Modal Styles */
        .modal {
            display: none; /* Hidden by default */
            position: fixed;
            z-index: 100;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.8); /* Dark overlay */
            backdrop-filter: blur(5px); /* Blurred background */
            animation: fadeIn 0.3s forwards; /* Fade in animation */
        }
        .modal-content {
            animation: slideIn 0.4s forwards; /* Slide in animation */
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        @keyframes slideIn {
            from { transform: translateY(-30px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        /* Hero Section Canvas Background */
        #hero-canvas {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 0; /* Behind content */
        }

        /* Chart Container Responsiveness */
        .chart-container {
            position: relative;
            width: 100%;
            max-width: 500px; /* Max width for chart */
            margin-left: auto;
            margin-right: auto;
            height: 300px; /* Default height */
            max-height: 400px;
        }
        @media (min-width: 768px) {
            .chart-container {
                height: 400px; /* Larger height on larger screens */
            }
        }

        /* Preloader Styles */
        #preloader {
            background-color: #111827; /* Match body background */
            transition: opacity 0.5s ease-out; /* Smooth fade out */
        }
        .loader {
            border-top-color: transparent; /* Makes it a spinner */
            animation: spin 1s linear infinite; /* Spinning animation */
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Scroll Reveal Animations */
        .animate-fade-in-up {
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.6s ease-out, transform 0.6s ease-out;
        }
        .animate-fade-in-up.is-visible {
            opacity: 1;
            transform: translateY(0);
        }
        .animate-fade-in {
            opacity: 0;
            transition: opacity 0.6s ease-out;
        }
        .animate-fade-in.is-visible {
            opacity: 1;
        }
        .animate-scale-in {
            opacity: 0;
            transform: scale(0.9);
            transition: opacity 0.6s ease-out, transform 0.6s ease-out;
        }
        .animate-scale-in.is-visible {
            opacity: 1;
            transform: scale(1);
        }

        /* Header Scroll Effect */
        .header-scrolled {
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3); /* Subtle shadow when scrolled */
            padding-top: 1rem;
            padding-bottom: 1rem;
        }

        /* Mobile Menu Styling */
        #mobile-menu {
            transition: max-height 0.3s ease-out, opacity 0.3s ease-out;
            max-height: 0; /* Hidden by default */
            overflow: hidden;
            opacity: 0;
        }
        #mobile-menu.open {
            max-height: 300px; /* Expands to show content (adjust as needed) */
            opacity: 1;
        }
    </style>
</head>
<body class="bg-gray-900 text-gray-200">

    <div id="preloader" class="fixed inset-0 w-full h-full flex items-center justify-center bg-gray-900 z-[9999]">
      <div class="loader border-4 border-amber-400 border-t-transparent rounded-full w-12 h-12"></div>
    </div>

    <header id="header" class="bg-gray-900/80 backdrop-blur-sm sticky top-0 left-0 right-0 z-50 transition-all duration-300 py-4">
        <nav class="container mx-auto px-6 flex justify-between items-center">
            <a href="#" class="font-orbitron text-xl md:text-2xl font-bold text-white">GK</a>
            <div class="hidden md:flex items-center space-x-8">
                <a href="#about" class="nav-link text-gray-300 hover:text-amber-400">About</a>
                <a href="#skills" class="nav-link text-gray-300 hover:text-amber-400">Skills</a>
                <a href="#projects" class="nav-link text-gray-300 hover:text-amber-400">Projects</a>
                <a href="#contact" class="nav-link text-gray-300 hover:text-amber-400">Contact</a>
            </div>
            <div class="hidden md:flex items-center space-x-4">
                <a href="https://drive.google.com/uc?export=download&id=1fz21nRiOzbYQKKnwpQT-dxzGvELy_OJv" download="GopalKumar_Resume.pdf" class="bg-gray-700 text-amber-400 font-bold py-2 px-4 rounded-md hover:bg-gray-600 transition-colors">
                    Download Resume
                </a>
                <a href="#contact" class="bg-amber-400 text-gray-900 font-bold py-2 px-4 rounded-md hover:bg-amber-300 transition-colors">
                    Hire Me
                </a>
            </div>
            <button id="mobile-menu-button" class="md:hidden text-white" aria-label="Open mobile menu">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7" />
                </svg>
            </button>
        </nav>
        <div id="mobile-menu" class="md:hidden px-6 pb-4">
            <a href="#about" class="block py-2 nav-link text-gray-300 hover:text-amber-400">About</a>
            <a href="#skills" class="block py-2 nav-link text-gray-300 hover:text-amber-400">Skills</a>
            <a href="#projects" class="block py-2 nav-link text-gray-300 hover:text-amber-400">Projects</a>
            <a href="#contact" class="block py-2 nav-link text-gray-300 hover:text-amber-400">Contact</a>
            <div class="flex flex-col space-y-3 mt-4">
                <a href="https://drive.google.com/uc?export=download&id=1fz21nRiOzbYQKKnwpQT-dxzGvELy_OJv" download="GopalKumar_Resume.pdf" class="text-center bg-gray-700 text-amber-400 font-bold py-2 px-4 rounded-md hover:bg-gray-600 transition-colors">
                    Download Resume
                </a>
                <a href="#contact" class="text-center bg-amber-400 text-gray-900 font-bold py-2 px-4 rounded-md hover:bg-amber-300 transition-colors">
                    Hire Me
                </a>
            </div>
        </div>
    </header>

    <main>
        <section id="home" class="h-screen flex items-center justify-center text-center relative overflow-hidden">
            <canvas id="hero-canvas"></canvas>
            <div class="relative z-10 p-4 animate-fade-in-up">
                <h1 class="font-orbitron text-4xl md:text-7xl font-bold text-white uppercase tracking-widest leading-tight">Gopal Kumar</h1>
                <p class="mt-4 text-lg md:text-2xl text-amber-400 font-medium animate-fade-in-up delay-100">I build beautiful, functional digital experiences.</p>
                <p class="mt-2 text-md md:text-lg text-gray-300 max-w-2xl mx-auto animate-fade-in-up delay-200">3rd Year B.Tech Student in Artificial Intelligence & Data Science at GGSIPU.</p>
                <div class="mt-8 flex justify-center space-x-6 animate-fade-in-up delay-300">
                    <a href="https://www.linkedin.com/in/gopal-kumar-07a62322b/" target="_blank" class="text-gray-400 hover:text-amber-400 transition-colors" aria-label="Gopal Kumar's LinkedIn profile">
                        <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path fill-rule="evenodd" d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z" clip-rule="evenodd"/></svg>
                    </a>
                    <a href="mailto:gopalkumarsingh2004@gmail.com" class="text-gray-400 hover:text-amber-400 transition-colors" aria-label="Email Gopal Kumar">
                        <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path d="M12 12.713l-11.985-9.713h23.97l-11.985 9.713zm0 2.574l-12-9.725v15.438h24v-15.438l-12 9.725z"/></svg>
                    </a>
                </div>
            </div>
        </section>

        <section id="about" class="py-20 md:py-32 bg-gray-900">
            <div class="container mx-auto px-6">
                <div class="text-center mb-12 animate-fade-in">
                    <h2 class="font-orbitron text-3xl md:text-4xl font-bold text-white">About Me</h2>
                    <div class="w-24 h-1 bg-amber-400 mx-auto mt-4"></div>
                </div>
                <div class="max-w-4xl mx-auto text-center text-gray-300 text-lg leading-relaxed animate-fade-in-up">
                    <p class="mb-4">
                        I am a passionate and driven student of Artificial Intelligence and Data Science at Guru Gobind Singh Indraprastha University. My journey into technology is fueled by a fascination with how data can be transformed into powerful insights and intelligent solutions. I thrive on challenges and am constantly exploring the intersections of web development, machine learning, and cloud technologies.
                    </p>
                    <p>
                        My goal is to leverage my diverse skillset—from building responsive frontends with React to architecting robust backends and deploying scalable applications—to create technology that is not only smart but also intuitive and impactful. I believe in continuous learning and applying my knowledge to solve real-world problems.
                    </p>
                </div>
            </div>
        </section>

        <section id="skills" class="py-20 md:py-32 bg-gray-800">
            <div class="container mx-auto px-6">
                <div class="text-center mb-16 animate-fade-in">
                    <h2 class="font-orbitron text-3xl md:text-4xl font-bold text-white">Technical Skillset</h2>
                    <p class="mt-4 text-gray-400 max-w-2xl mx-auto">A visual representation of my core competencies and a detailed list of the technologies I work with.</p>
                    <div class="w-24 h-1 bg-amber-400 mx-auto mt-4"></div>
                </div>
                <div class="grid md:grid-cols-2 gap-12 items-center">
                    <div class="chart-container animate-scale-in">
                        <canvas id="skillsChart"></canvas>
                    </div>
                    <div class="flex flex-col space-y-8 animate-fade-in-up">
                        <div>
                            <h3 class="font-orbitron text-xl font-bold text-amber-400 mb-4">AI & Data Science</h3>
                            <div class="flex flex-wrap gap-3">
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">Python</span>
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">Machine Learning</span>
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">SQL</span>
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">PowerBI</span>
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">Excel</span>
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">Meta Ads</span>
                            </div>
                        </div>
                        <div>
                            <h3 class="font-orbitron text-xl font-bold text-amber-400 mb-4">Web Development</h3>
                            <div class="flex flex-wrap gap-3">
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">React</span>
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">JavaScript</span>
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">HTML5 & CSS3</span>
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">Backend Development</span>
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">REST APIs</span>
                            </div>
                        </div>
                        <div>
                            <h3 class="font-orbitron text-xl font-bold text-amber-400 mb-4">Tools & Platforms</h3>
                            <div class="flex flex-wrap gap-3">
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">DevOps</span>
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">Git & GitHub</span>
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">Docker</span>
                                <span class="skill-tag bg-gray-700 text-gray-200 py-2 px-4 rounded-md">C++</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section id="projects" class="py-20 md:py-32 bg-gray-900">
            <div class="container mx-auto px-6">
                <div class="text-center mb-12 animate-fade-in">
                    <h2 class="font-orbitron text-3xl md:text-4xl font-bold text-white">Featured Projects</h2>
                    <p class="mt-4 text-gray-400 max-w-2xl mx-auto">A selection of projects that demonstrate my skills in action. Click on a card for more details.</p>
                    <div class="w-24 h-1 bg-amber-400 mx-auto mt-4"></div>
                </div>
                <div id="project-filters" class="flex justify-center flex-wrap gap-4 mb-12 animate-fade-in-up">
                    <button class="filter-btn active bg-amber-400 text-gray-900 font-bold py-2 px-5 rounded-md transition-colors" data-filter="all">All</button>
                    <button class="filter-btn bg-gray-700 hover:bg-gray-600 text-gray-200 font-bold py-2 px-5 rounded-md transition-colors" data-filter="ai-ml">AI/ML</button>
                    <button class="filter-btn bg-gray-700 hover:bg-gray-600 text-gray-200 font-bold py-2 px-5 rounded-md transition-colors" data-filter="web-dev">Web Dev</button>
                    <button class="filter-btn bg-gray-700 hover:bg-gray-600 text-gray-200 font-bold py-2 px-5 rounded-md transition-colors" data-filter="data-viz">Data Viz</button>
                </div>
                <div id="project-grid" class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
                    </div>
            </div>
        </section>

        <section id="contact" class="py-20 md:py-32 bg-gray-800">
            <div class="container mx-auto px-6">
                <div class="text-center mb-12 animate-fade-in">
                    <h2 class="font-orbitron text-3xl md:text-4xl font-bold text-white">Get In Touch</h2>
                    <p class="mt-4 text-gray-400 max-w-2xl mx-auto">Have a project in mind or just want to connect? Feel free to reach out.</p>
                    <div class="w-24 h-1 bg-amber-400 mx-auto mt-4"></div>
                </div>
                <div class="max-w-3xl mx-auto grid md:grid-cols-2 gap-8 items-center">
                    <div class="text-center md:text-left animate-fade-in-up">
                        <div class="mb-6">
                            <h3 class="font-orbitron text-xl text-amber-400">Email</h3>
                            <a href="mailto:gopalkumarsingh2004@gmail.com" class="text-gray-300 hover:text-white transition-colors">gopalkumarsingh2004@gmail.com</a>
                        </div>
                        <div class="mb-6">
                            <h3 class="font-orbitron text-xl text-amber-400">Phone</h3>
                            <a href="tel:8285623224" class="text-gray-300 hover:text-white transition-colors">8285623224</a>
                        </div>
                        <div>
                            <h3 class="font-orbitron text-xl text-amber-400">LinkedIn</h3>
                            <a href="https://www.linkedin.com/in/gopal-kumar-07a62322b/" target="_blank" class="text-gray-300 hover:text-white transition-colors">/gopal-kumar-07a62322b</a>
                        </div>
                        <div class="mt-8">
                               <a href="https://drive.google.com/uc?export=download&id=1fz21nRiOzbYQKKnwpQT-dxzGvELy_OJv" download="GopalKumar_Resume.pdf" class="bg-gray-700 text-amber-400 font-bold py-3 px-6 rounded-md hover:bg-gray-600 transition-colors">
                                 Download Resume
                            </a>
                        </div>
                    </div>
                    <form name="contact" method="POST" data-netlify="true" class="w-full animate-fade-in-up">
                        <div class="mb-4">
                            <input type="text" name="name" placeholder="Your Name" class="w-full p-3 rounded-md bg-gray-700 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-amber-400 text-white">
                        </div>
                        <div class="mb-4">
                            <input type="email" name="email" placeholder="Your Email" class="w-full p-3 rounded-md bg-gray-700 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-amber-400 text-white">
                        </div>
                        <div class="mb-4">
                            <textarea name="message" placeholder="Your Message" rows="5" class="w-full p-3 rounded-md bg-gray-700 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-amber-400 text-white"></textarea>
                        </div>
                        <button type="submit" class="w-full bg-amber-400 text-gray-900 font-bold py-3 px-6 rounded-md hover:bg-amber-300 transition-colors">Send Message</button>
                    </form>
                </div>
            </div>
        </section>
    </main>

    <footer class="bg-gray-900 py-6">
        <div class="container mx-auto px-6 text-center text-gray-500">
            <p>&copy; 2025 Gopal Kumar. All Rights Reserved.</p>
        </div>
    </footer>

    <div id="project-modal" class="modal">
        <div class="modal-content bg-gray-800 rounded-lg shadow-xl m-4 md:my-8 max-w-4xl mx-auto relative text-gray-300">
            </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Preloader functionality
            const preloader = document.getElementById('preloader');
            if (preloader) {
                setTimeout(() => {
                    preloader.style.opacity = '0';
                    setTimeout(() => preloader.style.display = 'none', 500); // Hide after transition
                }, 500); // Small delay to allow preloader animation to be seen
            }

            // Mobile Menu Toggle functionality
            const mobileMenuButton = document.getElementById('mobile-menu-button');
            const mobileMenu = document.getElementById('mobile-menu');

            mobileMenuButton.addEventListener('click', () => {
                mobileMenu.classList.toggle('open');
            });

            // Close mobile menu when a navigation link is clicked
            mobileMenu.querySelectorAll('a').forEach(link => {
                link.addEventListener('click', () => {
                    mobileMenu.classList.remove('open');
                });
            });

            // Sticky Header and Active Navigation Link Highlighting
            const header = document.getElementById('header');
            const navLinks = document.querySelectorAll('.nav-link');
            const sections = document.querySelectorAll('main section');

            function updateHeaderAndNav() {
                // Add/remove header shadow based on scroll position
                if (window.scrollY > 50) {
                    header.classList.add('header-scrolled');
                } else {
                    header.classList.remove('header-scrolled');
                }

                // Highlight active navigation link
                let currentSectionId = '';
                sections.forEach(section => {
                    // Adjust sectionTop by header height for accurate detection
                    const sectionTop = section.offsetTop - header.offsetHeight - 20; // Added 20px buffer
                    const sectionHeight = section.clientHeight;
                    if (pageYOffset >= sectionTop && pageYOffset < sectionTop + sectionHeight) {
                        currentSectionId = section.getAttribute('id');
                    }
                });

                navLinks.forEach(link => {
                    link.classList.remove('active');
                    if (link.getAttribute('href').includes(currentSectionId)) {
                        link.classList.add('active');
                    }
                });
            }

            window.addEventListener('scroll', updateHeaderAndNav);
            updateHeaderAndNav(); // Call on load to set initial state

            // Hero Section Canvas Particle Animation
            function initHeroCanvas() {
                const canvas = document.getElementById('hero-canvas');
                // Ensure canvas exists before proceeding
                if (!canvas) {
                    console.warn("Hero canvas not found.");
                    return;
                }

                const ctx = canvas.getContext('2d');
                let animationFrameId;

                // Resize canvas to fill window
                function resizeCanvas() {
                    canvas.width = window.innerWidth;
                    canvas.height = window.innerHeight;
                }

                window.addEventListener('resize', resizeCanvas);
                resizeCanvas(); // Initial resize

                const particles = [];
                const numParticles = 80; // Number of particles (adjust for density)
                const maxRadius = 2; // Max particle size
                const minRadius = 0.5; // Min particle size
                const maxSpeed = 0.5; // Max particle speed

                // Particle Class definition
                class Particle {
                    constructor() {
                        this.x = Math.random() * canvas.width;
                        this.y = Math.random() * canvas.height;
                        this.radius = Math.random() * (maxRadius - minRadius) + minRadius;
                        this.dx = (Math.random() - 0.5) * maxSpeed; // Random horizontal speed
                        this.dy = (Math.random() - 0.5) * maxSpeed; // Random vertical speed
                        this.color = `rgba(251, 191, 36, ${Math.random() * 0.7 + 0.3})`; // Amber with varying opacity
                    }

                    // Draw the particle
                    draw() {
                        ctx.beginPath();
                        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);
                        ctx.fillStyle = this.color;
                        ctx.fill();
                    }

                    // Update particle position and redraw
                    update() {
                        this.x += this.dx;
                        this.y += this.dy;

                        // Bounce off edges
                        if (this.x - this.radius < 0 || this.x + this.radius > canvas.width) {
                            this.dx = -this.dx;
                        }
                        if (this.y - this.radius < 0 || this.y + this.radius > canvas.height) {
                            this.dy = -this.dy;
                        }

                        this.draw();
                    }
                }

                // Create initial set of particles
                function createParticles() {
                    for (let i = 0; i < numParticles; i++) {
                        particles.push(new Particle());
                    }
                }

                // Animation loop
                function animateParticles() {
                    animationFrameId = requestAnimationFrame(animateParticles); // Request next frame
                    ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas
                    particles.forEach(particle => {
                        particle.update(); // Update and draw each particle
                    });
                }

                createParticles();
                animateParticles();
            }
            initHeroCanvas(); // Start hero canvas animation

            // Scroll Reveal Animations using Intersection Observer API
            const animateElements = document.querySelectorAll('.animate-fade-in-up, .animate-fade-in, .animate-scale-in');

            const observer = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('is-visible');
                        observer.unobserve(entry.target); // Stop observing once animated
                    }
                });
            }, {
                threshold: 0.1, // Trigger when 10% of the element is visible
                rootMargin: '0px 0px -50px 0px' // Start animation a bit earlier
            });

            animateElements.forEach(element => {
                observer.observe(element);
            });


            // Data for projects
            const projects = [
                {
                    id: 1,
                    title: "Customer Churn Prediction",
                    category: "ai-ml",
                    image: "https://placehold.co/600x400/1F2937/FBBF24?text=AI+Model",
                    summary: "Developed a machine learning model to accurately predict customer churn, enabling proactive retention strategies.",
                    problem: "A telecom company was facing high customer attrition rates, but lacked the tools to identify at-risk customers before they left.",
                    solution: "Developed and deployed a classification model using Python, Scikit-learn, and Pandas. The model analyzes customer usage patterns, contract details, and support interactions to generate a 'churn probability' score for each customer.",
                    impact: "The model achieved 88% accuracy in predicting churn, allowing the marketing team to target at-risk customers with retention offers, potentially reducing churn by 15%.",
                    tech: ["Python", "Scikit-learn", "Pandas", "Jupyter", "SQL"],
                    liveDemo: "#", // Replace with actual links
                    viewCode: "#" // Replace with actual links
                },
                {
                    id: 2,
                    title: "Interactive Sales Dashboard",
                    category: "data-viz",
                    image: "https://placehold.co/600x400/1F2937/FBBF24?text=PowerBI+Dashboard",
                    summary: "Designed an interactive PowerBI dashboard for real-time sales performance insights across various regions and products.",
                    problem: "The sales team relied on static weekly Excel reports, which made it difficult to spot trends, analyze performance, or make quick, data-driven decisions.",
                    solution: "Designed and built an interactive dashboard in PowerBI connected to a live SQL database. The dashboard features drill-down capabilities, time-series analysis, and KPI visualizations for sales, revenue, and profit margins.",
                    impact: "Provided the sales leadership with on-demand access to performance metrics, reducing reporting time by 80% and enabling faster identification of underperforming regions.",
                    tech: ["PowerBI", "DAX", "SQL", "Data Modeling"],
                    liveDemo: "#",
                    viewCode: "#"
                },
                {
                    id: 3,
                    title: "Full-Stack E-commerce Platform",
                    category: "web-dev",
                    image: "https://placehold.co/600x400/1F2937/FBBF24?text=React+App",
                    summary: "Built a complete e-commerce web application with user authentication, product listings, and a shopping cart using the MERN stack.",
                    problem: "A local business needed an online presence to sell their products but lacked an e-commerce platform.",
                    solution: "Engineered a full-stack solution using React for the frontend, Node.js/Express for the backend REST API, and MongoDB for the database. Implemented secure user authentication with JWT and integrated a payment gateway.",
                    impact: "Created a new sales channel for the business, resulting in a scalable platform ready for market entry.",
                    tech: ["React", "Node.js", "Express", "MongoDB", "JWT", "Tailwind CSS"],
                    liveDemo: "#",
                    viewCode: "#"
                },
                {
                    id: 4,
                    title: "CI/CD Pipeline Automation",
                    category: "web-dev",
                    image: "https://placehold.co/600x400/1F2937/FBBF24?text=DevOps+Pipeline",
                    summary: "Automated the build, test, and deployment process for web applications, significantly improving release cycles and reliability.",
                    problem: "The development team was spending significant manual effort on deploying updates, leading to slow release cycles and potential for human error.",
                    solution: "Constructed a CI/CD pipeline that automatically triggers on every push to the main branch. The pipeline builds a Docker image, runs automated tests, and deploys the container to a cloud server, sending notifications on success or failure.",
                    impact: "Reduced deployment time from 2 hours to 10 minutes and eliminated deployment-related errors, increasing developer productivity.",
                    tech: ["DevOps", "GitHub Actions", "Docker", "YAML", "Shell Scripting"],
                    liveDemo: "#",
                    viewCode: "#"
                },
                {
                    id: 5,
                    title: "Meta Ads Campaign Analysis",
                    category: "data-viz",
                    image: "https://placehold.co/600x400/1F2937/FBBF24?text=Marketing+Tech",
                    summary: "Analyzed and visualized Meta Ads campaign performance to optimize ad spend and identify top-performing strategies.",
                    problem: "A startup was spending on Meta Ads but had poor visibility into which campaigns, ad sets, or creatives were driving the best results.",
                    solution: "Extracted campaign data using the Meta Ads API, performed data cleaning and analysis in Python, and created a PowerBI dashboard to visualize key metrics like CTR, Conversion Rate, and ROAS. Identified top-performing audience segments and ad creatives.",
                    impact: "Provided actionable insights that led to a reallocation of the ad budget, improving overall ROAS by 25% in one quarter.",
                    tech: ["Meta Ads", "Python", "Pandas", "PowerBI", "API"],
                    liveDemo: "#",
                    viewCode: "#"
                }
            ];

            const projectGrid = document.getElementById('project-grid');
            const projectModal = document.getElementById('project-modal');
            const modalContent = projectModal.querySelector('.modal-content');

            // Function to render project cards based on filter
            function renderProjects(filter = 'all') {
                projectGrid.innerHTML = ''; // Clear existing projects
                const filteredProjects = filter === 'all' ? projects : projects.filter(p => p.category === filter);

                filteredProjects.forEach(project => {
                    const card = document.createElement('div');
                    card.className = 'project-card bg-gray-800 rounded-lg cursor-pointer shadow-lg animate-fade-in-up';
                    card.dataset.id = project.id; // Store project ID for modal
                    card.innerHTML = `
                        <div class="relative">
                            <img src="${project.image}" alt="Screenshot of ${project.title} project" class="rounded-t-lg w-full h-48 object-cover">
                            <div class="project-overlay absolute inset-0 bg-black/60 flex items-center justify-center rounded-t-lg">
                                <p class="text-white text-lg font-bold">View Details</p>
                            </div>
                        </div>
                        <div class="p-6">
                            <h3 class="font-orbitron text-xl font-bold text-white">${project.title}</h3>
                            <p class="text-gray-400 mt-2 h-16">${project.summary}</p>
                            <div class="mt-4 flex flex-wrap gap-2">
                                ${project.tech.slice(0, 3).map(t => `<span class="text-xs bg-gray-700 text-amber-400 py-1 px-2 rounded-full">${t}</span>`).join('')}
                            </div>
                        </div>
                    `;
                    projectGrid.appendChild(card);
                });

                // Re-observe new project cards for animation after rendering
                projectGrid.querySelectorAll('.project-card').forEach(card => {
                    observer.observe(card);
                });
            }

            // Function to open and populate the project modal
            function openModal(projectId) {
                const project = projects.find(p => p.id == projectId);
                if (!project) return; // Project not found

                modalContent.innerHTML = `
                    <button id="close-modal" class="absolute top-4 right-4 text-gray-400 hover:text-white text-3xl font-bold" aria-label="Close project details">&times;</button>
                    <img src="${project.image}" alt="Screenshot of ${project.title} project details" class="w-full h-64 object-cover rounded-t-lg">
                    <div class="p-8">
                        <h2 class="font-orbitron text-3xl font-bold text-white mb-2">${project.title}</h2>
                        <div class="flex flex-wrap gap-2 mb-6">
                            ${project.tech.map(t => `<span class="text-sm bg-gray-700 text-amber-400 py-1 px-3 rounded-full">${t}</span>`).join('')}
                        </div>
                        <div class="space-y-4 text-gray-300">
                            <div><strong class="text-amber-400 block">The Problem:</strong><p>${project.problem}</p></div>
                            <div><strong class="text-amber-400 block">My Solution:</strong><p>${project.solution}</p></div>
                            <div><strong class="text-amber-400 block">The Impact:</strong><p>${project.impact}</p></div>
                        </div>
                           <div class="mt-8 flex space-x-4">
                                <a href="${project.liveDemo}" target="_blank" class="bg-amber-400 text-gray-900 font-bold py-2 px-6 rounded-md hover:bg-amber-300 transition-colors" aria-label="Live demo of ${project.title}">Live Demo</a>
                                <a href="${project.viewCode}" target="_blank" class="bg-gray-700 text-white font-bold py-2 px-6 rounded-md hover:bg-gray-600 transition-colors" aria-label="View code for ${project.title}">View Code</a>
                            </div>
                    </div>
                `;
                projectModal.style.display = 'block'; // Show the modal
                // Attach event listener to the close button
                document.getElementById('close-modal').addEventListener('click', () => projectModal.style.display = 'none');
            }

            // Project Filtering Logic
            const filterButtons = document.querySelectorAll('.filter-btn');
            filterButtons.forEach(button => {
                button.addEventListener('click', () => {
                    // Remove active state from all buttons
                    filterButtons.forEach(btn => {
                        btn.classList.remove('bg-amber-400', 'text-gray-900');
                        btn.classList.add('bg-gray-700', 'text-gray-200');
                    });
                    // Add active state to the clicked button
                    button.classList.add('bg-amber-400', 'text-gray-900');
                    button.classList.remove('bg-gray-700', 'text-gray-200');
                    renderProjects(button.dataset.filter); // Re-render projects based on filter
                });
            });

            // Event listener for opening project modal when a card is clicked
            projectGrid.addEventListener('click', (e) => {
                const card = e.target.closest('.project-card');
                if (card) {
                    openModal(card.dataset.id);
                }
            });

            // Close modal when clicking outside the modal content
            window.addEventListener('click', (e) => {
                if (e.target == projectModal) {
                    projectModal.style.display = 'none';
                }
            });

            // Initial render of projects on page load
            renderProjects();

            // Chart.js for Skills Radar Chart
            const ctx = document.getElementById('skillsChart').getContext('2d');
            const skillsChart = new Chart(ctx, {
                type: 'radar',
                data: {
                    labels: ['Machine Learning', 'Data Analysis', 'Web Dev', 'DevOps', 'Databases', 'Problem Solving'],
                    datasets: [{
                        label: 'My Proficiency',
                        data: [90, 85, 75, 60, 80, 95], // Example proficiency data (0-100)
                        backgroundColor: 'rgba(251, 191, 36, 0.4)', // Amber with transparency
                        borderColor: '#FBBF24', // Amber border
                        borderWidth: 2,
                        pointBackgroundColor: '#FBBF24',
                        pointBorderColor: '#fff',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: '#FBBF24'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false, // Allows chart to resize freely
                    scales: {
                        r: {
                            angleLines: {
                                color: 'rgba(229, 231, 235, 0.2)' // Light gray for grid lines
                            },
                            grid: {
                                color: 'rgba(229, 231, 235, 0.2)'
                            },
                            pointLabels: {
                                color: '#E5E7EB', // White color for labels
                                font: {
                                    size: 14 // Font size for skill labels
                                }
                            },
                            suggestedMin: 0,
                            suggestedMax: 100,
                            ticks: {
                                display: false, // Hide numeric ticks
                                beginAtZero: true,
                                color: '#E5E7EB'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false, // Hide dataset legend
                            labels: {
                                color: '#E5E7EB'
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return context.dataset.label + ': ' + context.raw + '%';
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
</body>
</html>
